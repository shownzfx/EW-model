install.packages("devtools")
devtools::install_github("bergant/nlexperiment")
#experiment 2 with less
experiment2 <- nl_experiment(
model_file = "C:/Users/shown/Documents/GitHub/EW-model/EW draft 1.nlogo",
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,2000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2)
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
)
# run_measures=measures(
#   mean_infra="mean [infraQuality] of serviceArea",
#   org_repair_budget="[orgRepairBudget] of orgs",
#   org_vulnerability = "mean [infraVulnerability] of serviceArea",
#   repair_cost="sum [repairCost] of serviceArea",
#   extreme_weather_frequency="extremeWeatherFreq",
#   prevention="mean [prevention] of serviceArea",
#   damage="mean [currentDamage] of serviceArea"
# ),
)
library(nlexperiment)
nl_netlogo_path("C:/Program Files/NetLogo 6.0.2/app")  #to netlogo installation on windows
nl_netlogo_path()
setwd("C:/Users/shown/Documents/GitHub/EW-model")
getwd()
# AGAVE
library(nlexperiment)
nl_netlogo_path("/packages/7x/netlogo/6.0.2/app")  #to netlogo installation
nl_netlogo_path()
setwd("/home/fzhang59/dev/EW-model")
module_file_path="/home/fzhang59/dev/EW-model/EW draft 1.nlogo"
#experiment 2 with less
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,2000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2)
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
results2_lessCombinations<-nl_run(experiment2,print_progress = T,parallel = T)
seq(0,12,3)
#experiment 2 with less
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,2000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,9,3),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2)
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
results2_lessCombinations<-nl_run(experiment2,print_progress = T,parallel = T)
results2<-nl_get_result(results2_lessCombinations)
