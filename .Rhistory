interval=c(0,11,23,35),
choose-strategy=c("rememberFrequency","rememberCumDamage",
"rememberSevereDamage","doNothing")
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
)
)
library(nlexperiment)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy=c("rememberFrequency","rememberCumDamage",
"rememberSevereDamage","doNothing")
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
)
)
nl_netlogo_path("C:/Program Files/NetLogo 6.0.2/app")  #to netlogo installation on windows
nl_netlogo_path()
setwd("C:/Users/shown/Documents/GitHub/EW-model")
module_file_path="C:/Users/shown/Documents/GitHub/EW-model/EW draft 1.nlogo"
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy=c("rememberFrequency","rememberCumDamage",
"rememberSevereDamage","doNothing")
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
)
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy=c("rememberFrequency","rememberCumDamage",
"rememberSevereDamage","doNothing")
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
# Windows
library(nlexperiment)
nl_netlogo_path("C:/Program Files/NetLogo 6.0.2/app")  #to netlogo installation on windows
nl_netlogo_path()
setwd("C:/Users/shown/Documents/GitHub/EW-model")
module_file_path="C:/Users/shown/Documents/GitHub/EW-model/EW draft 1.nlogo"
experiment <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = seq(0,1,0.2),
orgBudget = seq(0,500,100),
repairRatio=seq(0,1,0.2),
extremeWeatherDamage=seq(0,20,5),
adaptThreshold=seq(0,20,5),
maxPrevention=seq(0,20,5)
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
# step_measures = measures(
#  mean_damage = "mean [currentDamage] of serviceArea",
#  mean_preventionPerTick="mean [prevention] of serviceArea"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy=c("rememberFrequency","rememberCumDamage",
"rememberSevereDamage","doNothing")
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35)
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
?nl_experiment
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35)
choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35)
# choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy="rememberFrequency"
# choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
load("~/GitHub/EW-model/EW draft 1 experiment1-table.csv")
##---data from behaviroal space----------------------
data<-read.csv(("~/GitHub/EW-model/EW draft 1 experiment1-table.csv"))
##---data from behaviroal space----------------------
data<-read.csv(("~/GitHub/EW-model/EW draft 1 experiment1-table.csv"))
##---data from behaviroal space----------------------
data<-read.csv("~/GitHub/EW-model/EW draft 1 experiment1-table.csv")
data<-read.csv("~/GitHub/EW-model/EW draft 1 experiment1-spreadsheet.csv")
data<-read.csv("~/GitHub/EW-model/EW draft 1 experiment1-spreadsheet.csv")
##---data from behaviroal space----------------------
data<-read.csv("~/GitHub/EW-model/EW draft 1 experiment1-table.csv")
?nl_param_lhs
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
choose-strategy="rememberFrequency"
# choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35),
# choose-strategy="rememberFrequency"
# choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
#experiment 2 with less combinations
experiment2 <- nl_experiment(
model_file = module_file_path,
iterations = 100,
repetitions = 3,
param_values = list(
intensityThreshold = c(0,0.5,0.8,1),
orgBudget = seq(0,3000,1000),
repairRatio=c(0.5,0.8,1),
extremeWeatherDamage=c(0,5,10),
adaptThreshold=seq(0,10,5),
maxPrevention=seq(0,10,5),
adaptCostPerUnit=c(1,2),
cumDamageRatioThreshold=c(0,5,8,10),
damageRatioThreshold=c(0,0.1,0.25,0.5),
numMonths=c(0,12,24,36),
interval=c(0,11,23,35)
# choose-strategy="rememberFrequency"
# choose-strategy=c("rememberFrequency", "rememberCumDamage")
# choose-strategy=c("rememberFrequency","rememberCumDamage",
#                   "rememberSevereDamage","doNothing")
#
),
step_measures = measures(
mean_infra_perTick="mean [infraQuality] of serviceArea",
mean_damage_perTick = "mean [currentDamage] of serviceArea",
mean_preventionPerTick="mean [prevention] of serviceArea"
),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "mean [infraVulnerability] of serviceArea",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [currentDamage] of serviceArea"
),
)
results2_lessCombinations<-nl_run(experiment2,print_progress = T,parallel = T)
