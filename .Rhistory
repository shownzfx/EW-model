chooseStrategy= "rememberFrequency"
)
str(param_values)
param_values
str(param_values)
class(param_values)
module_file_path="C:/Users/shown/Documents/GitHub/EW-model/EW model using numeric chooser.nlogo"
experimentEW1 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=25,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 1
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 100
#random_seed = 1:100
)
resultEW1<-nl_run(experimentEW1,parallel = T,print_progress = T)
test<-data.frame(x=1:10, y=11:20)
test
write.csv(test,"/home/fzhang59/dev/EW-model/nlexperiment results.csv")
source('~/GitHub/EW-model/nlexperiment OAT.R')
source('~/GitHub/EW-model/nlexperiment_OAT_S1.R')
source('~/GitHub/EW-model/nlexperiment_OAT_S1.R')
nl_param_oat(
n=25,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
)
nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
)
experimentEW1 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 1
#random_seed = 1:100
)
resultEW1<-nl_run(experimentEW1,parallel = T,print_progress = F)
library(nlexperiment)
nl_netlogo_path("C:/Program Files/NetLogo 6.0.2/app")  #to netlogo installation on windows
nl_netlogo_path()
setwd("C:/Users/shown/Documents/GitHub/EW-model")
module_file_path="C:/Users/shown/Documents/GitHub/EW-model/EW model using numeric chooser.nlogo"
experimentEW1 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 1
#random_seed = 1:100
)
experimentEW2 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 1
#random_seed = 1:100
)
resultEW2<-nl_run(experimentEW2,parallel = T,print_progress = F)
resultEW2<-nl_run(experimentEW2,parallel = T,print_progress = F)
resultEW2_backup <- resultEW2
resultEW2
resultEW2_dat<-nl_get_run_result(resultEW2)
resultEW2_dat
resultEW2_run<-nl_get_run_result(resultEW2)
resultEW2_step<-nl_get_run_result(resultEW2)
resultEW2_step
?nl_get_step_result
(.packages())
rm(list = ls())
(.packages())
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
(.packages())
(.packages())
warnings()
#lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
(.packages())
warnings()
# Windows
library(nlexperiment)
nl_netlogo_path("C:/Program Files/NetLogo 6.0.2/app")  #to netlogo installation on windows
nl_netlogo_path()
setwd("C:/Users/shown/Documents/GitHub/EW-model")
module_file_path="C:/Users/shown/Documents/GitHub/EW-model/EW model using numeric chooser.nlogo"
experimentS2 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 1
#random_seed = 1:100
)
resultS2<-nl_run(experimentS2,parallel = T,print_progress = F)
experimentS2 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 10
#random_seed = 1:100
)
resultS2<-nl_run(experimentS2,parallel = T,print_progress = F)
options(java.parameters = "-Xmx8g")
#lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
(.packages())
experimentS2 <- nl_experiment(
model_file = module_file_path,
iterations = 120,
param_values = nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 10
#random_seed = 1:100
)
resultS2<-nl_run(experimentS2,parallel = T,print_progress = F)
resultS2_backup <- resultS2
resultS2_run<-nl_get_run_result(resultS2)
resultS2_step<-nl_get_step_result(resultS2)
dim(resultS2_run)
dim(resultS2_step)
nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
)
?nl_param_oat
nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
)
warning()
warnings()
nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
)
View(nl_param_oat(
n=1,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
))
View(nl_param_oat(
n=2,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
))
View(nl_param_oat(
n=10,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
))
experimentS2 <- nl_experiment(
model_file = module_file_path,
iterations = 10,
param_values = nl_param_oat(
n=25,
intensityThreshold = c(0,0.5,1),
orgBudget = c(0,4000,2000),
repairRatio=c(0,1,0.5),
extremeWeatherDamage=c(0,20,10),
adaptThreshold=c(0,10,5),
maxPrevention=c(0,20,10),
damageRatioThreshold=c(0,0.3,0.15),
interval=c(0,48,24),
numMonths = c(0,48,24),
riskPerceptionThreshold=c(0,150,75),
chooseStrategy= 2
),
# mapping = c(
#   intensity_threshold="intensity-threshold",
#   org_budget="org-budget"
# ),
run_measures=measures(
mean_infra="mean [infraQuality] of serviceArea",
org_repair_budget="[orgRepairBudget] of orgs",
org_vulnerability = "[orgVulnerability] of orgs",
repair_cost="sum [repairCost] of serviceArea",
extreme_weather_frequency="extremeWeatherFreq",
prevention="mean [prevention] of serviceArea",
damage="mean [damagePerTick] of serviceArea",
NumAdapt="sum [adaptTime] of orgs"
),
step_measures=measures(
step_infraQuality="mean [infraQuality] of serviceArea",
step_orgVul= "[orgVulnerability] of orgs",
whetherAdapt="[whetherAdapt] of orgs",
step_prevention="mean [prevention] of serviceArea",
step_repair_cost="sum [repairCost] of serviceArea",
step_meanDamage= "mean [damagePerTick] of serviceArea"
),
repetitions = 100
#random_seed = 1:100
)
resultS2<-nl_run(experimentS2,parallel = T,print_progress = F)
resultS2_run<-nl_get_run_result(resultS2)
resultS2_step<-nl_get_step_result(resultS2)
?nl_experiment
